import java.util.jar.JarFile
import org.yaml.snakeyaml.Yaml

apply plugin: 'java'
apply plugin: 'groovy'
// apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

buildscript {
dependencies{
        classpath("org.yaml:snakeyaml:2.0")
    }
    repositories {
        maven {
            url 'https://jfrog.rosenvold.tech/artifactory/plugins'
            credentials {
                username = "admin" // Your Artifactory username
                password = "cmVmdGtuOjAxOjE3MjczNzcyMDQ6UUJvelM5WHJxVndXb1FxNVh4djFta1ZnaEh6" // Your Artifactory password
            }
        }
        mavenCentral()
    }
    // dependencies { classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4" }
}
buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:5.1.9'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}


artifactory {
    contextUrl = "https://jfrog.rosenvold.tech/artifactory"
    publish {
        repository {
            repoKey = 'plugins'
            username = "admin" // Your Artifactory username
            password = "" // Your Artifactory password
            // maven = true
        }
        defaults {
            publications('mavenJava')
        }
        // publishBuildInfo = true
    }
}
ext.filesToPublish = []
ext.dir= new File("_plugins")
def files = ext.dir.list().findAll { it.endsWith('.jar') }
files.each {
    ext.filesToPublish << new File(ext.dir, it)
}

println(filesToPublish.toString())


publishing {
    publications {
        // for ( f in filesToPublish ) {
        //     def jarFile = new JarFile(f)
        //     def pluginYml = (jarFile.getEntry("plugin.yml") != null) ? jarFile.getEntry("plugin.yml") : jarFile.getEntry("bungee.yml")
        //     if (pluginYml != null) {
        //         def yaml = new Yaml()
        //         def plugin = yaml.load(jarFile.getInputStream(pluginYml))
        //         def ARTIFACT_ID = plugin.name
        //         def ARTIFACT_VERSION = plugin.version.toString()
        //         if(ARTIFACT_VERSION.contains(" ")) {
        //             ARTIFACT_VERSION = ARTIFACT_VERSION.replace(" ", "-")
        //         }
        //         def ARTIFACT_GROUP = plugin.name
                
        //         def pomFileName = "${ARTIFACT_ID}-${ARTIFACT_VERSION}.pom"
        //         def artifactPath = "${ARTIFACT_GROUP.replace(".", "/")}/${ARTIFACT_ID}/${ARTIFACT_VERSION}/${pomFileName}"
        //         def repositoryUrl = "https://jfrog.rosenvold.tech/artifactory/plugins/"+"${artifactPath}"


        //         println("# searching for existing artifact with name ${ARTIFACT_ID} version ${ARTIFACT_VERSION}")
        //         println("# URL: ${repositoryUrl}")
        //         println("")

        //         // if (urlExists(repositoryUrl)) {
        //         //     println("Artifact with version $ARTIFACT_VERSION already exist - increase the version to publish")
        //         // } else {
        //         //     println("# No existing artifact found. Preceding to publish")
        //         //     println("")
        //             mavenJava(MavenPublication) {
        //                 artifact f
        //                 groupId ARTIFACT_GROUP
        //                 artifactId ARTIFACT_ID
        //                 version ARTIFACT_VERSION
        //                 println("Published $ARTIFACT_ID")
                    
        //         }
        //     }
        // }
        mavenJava(MavenPublication) {
            from components.java

            // Specify the JAR file to include in the publication
            artifact(file("_plugins/TAB-4.0.3.jar"))

            // Define other publication details (groupId, artifactId, version, etc.)
            groupId = 'group'
            artifactId = 'test'
            version = '1.0.1'
        }
    }
}